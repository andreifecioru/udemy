*{
  box-sizing: border-box;
}

body {
  font-family: 'Montserrat', sans-serif;

  /* Remove the browser's default margins. */
  margin: 0;
}

main {
  height: 200px;
}
#product-overview {
  background: #ff1b68;
  width: 100%;
  /* 
    This does not scale vertically to fill the whole page:
    The height prop refers to the hight made available by the parent element. 

    If you want to stretch this element to fill the page vertically,
    all its parents should have height prop set to 100%.
  */
  height: 100%;

  /* 
    Adding left margin in conjunction with a width of 100%
    will push our element outside the page (we need to scroll horizontally).
  */
  padding-left: 50px;
  border-left: blue solid 10px;

  /* 
    However we can control this behavior by altering the box sizing.

    NOTE:
      - we can only include the padding and border in the box (not the margin).
      - this is so common, that this setting is set as a global setting 
        using the universal selector.
  */
  box-sizing: border-box;
}

#product-overview h1 {
  /* Get half of the width parent element*/
  width: 50%;
  height: 100%;

  margin-top: 0;

  color: black;
  background: yellow;
  font-family: 'Anton', sans-serif;
}

.section-title {
  /*
    The top-margin of this element is collapsed into the bottom-margin of 
    #product-overview (the larger one wins).

    Also the margin of this element goes outside of it's parent bounds
    The parent has no top margin, but the top margin of this element overflows
    to become the top margin of the parent.
  */
  margin: 30px;
  color: #2ddf5c;
}

.main-header {
  background: #2ddf5c;
  padding: 8px 16px;
  width: 100%;
}

/*
  For inline elements (like spans and anchors) you cannot set 
  vertical padding or vertical margin props until you change the display prop 
  (to something like block or inline-block).

  Also width and height props have no effect on inline elements.

  NOTE: 
    - vertical padding still pushes out the border (just not the other elements).
    - you can use the line-height prop to control the vertical spacing of inline elements.

*/
.main-nav__item {
  color: red;
  display: inline-block;
  padding: 10px;
}

.main-nav__items {
  padding: 0;
  margin: 0;
  /* Remove the bullets from the list. */
  list-style: none;
}

.main-nav {
  display: inline-block;
  /* Compute values dynamically using calc(). */
  width: calc(100% - 60px);
  text-align: right;
}

.main-header > div {
  display: inline-block;
}